
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file Quannhan.cs instead.
*/

#region using directives

using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

#endregion

namespace QUANLYQN.Entities
{
	///<summary>
	/// An object representation of the 'QUANNHAN' table. [No description found the database]	
	///</summary>
	[Serializable, DataObject]
	[CLSCompliant(true)]
	public abstract partial class QuannhanBase : EntityBase, QUANLYQN.Entities.IQuannhan, IEntityId<QuannhanKey>, System.IComparable, System.ICloneable, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private QuannhanEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private QuannhanEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private QuannhanEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<Quannhan> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>	
		[field:NonSerialized]
		public event QuannhanEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event QuannhanEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="QuannhanBase"/> instance.
		///</summary>
		public QuannhanBase()
		{
			this.entityData = new QuannhanEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="QuannhanBase"/> instance.
		///</summary>
		///<param name="maQuannhan"></param>
		///<param name="hotenKhaisinh"></param>
		///<param name="hotenThuongdung"></param>
		///<param name="sotheQuannhan"></param>
		///<param name="cmtQuannhan"></param>
		///<param name="anhQuannhan"></param>
		///<param name="ngaysinh"></param>
		///<param name="nguyenquan"></param>
		///<param name="sinhquan"></param>
		///<param name="truquan"></param>
		///<param name="dcBaotin"></param>
		///<param name="hotenCha"></param>
		///<param name="hotenMe"></param>
		///<param name="safeNameHotenVoChong"></param>
		///<param name="soAnhchiem"></param>
		///<param name="socon"></param>
		///<param name="idCapbac"></param>
		///<param name="idChucvu"></param>
		///<param name="cnqs"></param>
		///<param name="backythuat"></param>
		///<param name="trinhdoVanhoa"></param>
		///<param name="suckhoe"></param>
		///<param name="ngoaingu"></param>
		///<param name="hangThuongtat"></param>
		///<param name="tpGiadinh"></param>
		///<param name="tpBanthan"></param>
		///<param name="idDantoc"></param>
		///<param name="idTongiao"></param>
		///<param name="idGioitinh"></param>
		///<param name="ngayNhapngu"></param>
		///<param name="ngayXuatngu"></param>
		///<param name="ngayTaingu"></param>
		///<param name="ngayVaodoan"></param>
		///<param name="ngayVaodang"></param>
		///<param name="ngayvaodangChinhthuc"></param>
		///<param name="ngaycaptheQn"></param>
		///<param name="ngaychuyenQncn"></param>
		///<param name="ngaychuyenCnv"></param>
		///<param name="idDonvi"></param>
		///<param name="idLop"></param>
		///<param name="idLoaiquannhan"></param>
		///<param name="trangthai"></param>
		///<param name="ghichu"></param>
		public QuannhanBase(System.String maQuannhan, System.String hotenKhaisinh, System.String hotenThuongdung, 
			System.Int32 sotheQuannhan, System.Int32 cmtQuannhan, System.Byte[] anhQuannhan, System.DateTime ngaysinh, 
			System.String nguyenquan, System.String sinhquan, System.String truquan, System.String dcBaotin, 
			System.String hotenCha, System.String hotenMe, System.String safeNameHotenVoChong, System.Int32 soAnhchiem, 
			System.Int32 socon, System.Int32 idCapbac, System.Int32 idChucvu, System.String cnqs, 
			System.String backythuat, System.String trinhdoVanhoa, System.String suckhoe, System.String ngoaingu, 
			System.String hangThuongtat, System.String tpGiadinh, System.String tpBanthan, System.Int32 idDantoc, 
			System.Int32 idTongiao, System.Int32 idGioitinh, System.DateTime ngayNhapngu, System.DateTime? ngayXuatngu, 
			System.DateTime? ngayTaingu, System.DateTime? ngayVaodoan, System.DateTime? ngayVaodang, System.DateTime? ngayvaodangChinhthuc, 
			System.DateTime? ngaycaptheQn, System.DateTime? ngaychuyenQncn, System.DateTime? ngaychuyenCnv, 
			System.Int32 idDonvi, System.Int32 idLop, System.Int32 idLoaiquannhan, System.String trangthai, 
			System.String ghichu)
		{
			this.entityData = new QuannhanEntityData();
			this.backupData = null;

			this.MaQuannhan = maQuannhan;
			this.HotenKhaisinh = hotenKhaisinh;
			this.HotenThuongdung = hotenThuongdung;
			this.SotheQuannhan = sotheQuannhan;
			this.CmtQuannhan = cmtQuannhan;
			this.AnhQuannhan = anhQuannhan;
			this.Ngaysinh = ngaysinh;
			this.Nguyenquan = nguyenquan;
			this.Sinhquan = sinhquan;
			this.Truquan = truquan;
			this.DcBaotin = dcBaotin;
			this.HotenCha = hotenCha;
			this.HotenMe = hotenMe;
			this.SafeNameHotenVoChong = safeNameHotenVoChong;
			this.SoAnhchiem = soAnhchiem;
			this.Socon = socon;
			this.IdCapbac = idCapbac;
			this.IdChucvu = idChucvu;
			this.Cnqs = cnqs;
			this.Backythuat = backythuat;
			this.TrinhdoVanhoa = trinhdoVanhoa;
			this.Suckhoe = suckhoe;
			this.Ngoaingu = ngoaingu;
			this.HangThuongtat = hangThuongtat;
			this.TpGiadinh = tpGiadinh;
			this.TpBanthan = tpBanthan;
			this.IdDantoc = idDantoc;
			this.IdTongiao = idTongiao;
			this.IdGioitinh = idGioitinh;
			this.NgayNhapngu = ngayNhapngu;
			this.NgayXuatngu = ngayXuatngu;
			this.NgayTaingu = ngayTaingu;
			this.NgayVaodoan = ngayVaodoan;
			this.NgayVaodang = ngayVaodang;
			this.NgayvaodangChinhthuc = ngayvaodangChinhthuc;
			this.NgaycaptheQn = ngaycaptheQn;
			this.NgaychuyenQncn = ngaychuyenQncn;
			this.NgaychuyenCnv = ngaychuyenCnv;
			this.IdDonvi = idDonvi;
			this.IdLop = idLop;
			this.IdLoaiquannhan = idLoaiquannhan;
			this.Trangthai = trangthai;
			this.Ghichu = ghichu;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="Quannhan"/> instance.
		///</summary>
		///<param name="maQuannhan"></param>
		///<param name="hotenKhaisinh"></param>
		///<param name="hotenThuongdung"></param>
		///<param name="sotheQuannhan"></param>
		///<param name="cmtQuannhan"></param>
		///<param name="anhQuannhan"></param>
		///<param name="ngaysinh"></param>
		///<param name="nguyenquan"></param>
		///<param name="sinhquan"></param>
		///<param name="truquan"></param>
		///<param name="dcBaotin"></param>
		///<param name="hotenCha"></param>
		///<param name="hotenMe"></param>
		///<param name="safeNameHotenVoChong"></param>
		///<param name="soAnhchiem"></param>
		///<param name="socon"></param>
		///<param name="idCapbac"></param>
		///<param name="idChucvu"></param>
		///<param name="cnqs"></param>
		///<param name="backythuat"></param>
		///<param name="trinhdoVanhoa"></param>
		///<param name="suckhoe"></param>
		///<param name="ngoaingu"></param>
		///<param name="hangThuongtat"></param>
		///<param name="tpGiadinh"></param>
		///<param name="tpBanthan"></param>
		///<param name="idDantoc"></param>
		///<param name="idTongiao"></param>
		///<param name="idGioitinh"></param>
		///<param name="ngayNhapngu"></param>
		///<param name="ngayXuatngu"></param>
		///<param name="ngayTaingu"></param>
		///<param name="ngayVaodoan"></param>
		///<param name="ngayVaodang"></param>
		///<param name="ngayvaodangChinhthuc"></param>
		///<param name="ngaycaptheQn"></param>
		///<param name="ngaychuyenQncn"></param>
		///<param name="ngaychuyenCnv"></param>
		///<param name="idDonvi"></param>
		///<param name="idLop"></param>
		///<param name="idLoaiquannhan"></param>
		///<param name="trangthai"></param>
		///<param name="ghichu"></param>
		public static Quannhan CreateQuannhan(System.String maQuannhan, System.String hotenKhaisinh, System.String hotenThuongdung, 
			System.Int32 sotheQuannhan, System.Int32 cmtQuannhan, System.Byte[] anhQuannhan, System.DateTime ngaysinh, 
			System.String nguyenquan, System.String sinhquan, System.String truquan, System.String dcBaotin, 
			System.String hotenCha, System.String hotenMe, System.String safeNameHotenVoChong, System.Int32 soAnhchiem, 
			System.Int32 socon, System.Int32 idCapbac, System.Int32 idChucvu, System.String cnqs, 
			System.String backythuat, System.String trinhdoVanhoa, System.String suckhoe, System.String ngoaingu, 
			System.String hangThuongtat, System.String tpGiadinh, System.String tpBanthan, System.Int32 idDantoc, 
			System.Int32 idTongiao, System.Int32 idGioitinh, System.DateTime ngayNhapngu, System.DateTime? ngayXuatngu, 
			System.DateTime? ngayTaingu, System.DateTime? ngayVaodoan, System.DateTime? ngayVaodang, System.DateTime? ngayvaodangChinhthuc, 
			System.DateTime? ngaycaptheQn, System.DateTime? ngaychuyenQncn, System.DateTime? ngaychuyenCnv, 
			System.Int32 idDonvi, System.Int32 idLop, System.Int32 idLoaiquannhan, System.String trangthai, 
			System.String ghichu)
		{
			Quannhan newQuannhan = new Quannhan();
			newQuannhan.MaQuannhan = maQuannhan;
			newQuannhan.HotenKhaisinh = hotenKhaisinh;
			newQuannhan.HotenThuongdung = hotenThuongdung;
			newQuannhan.SotheQuannhan = sotheQuannhan;
			newQuannhan.CmtQuannhan = cmtQuannhan;
			newQuannhan.AnhQuannhan = anhQuannhan;
			newQuannhan.Ngaysinh = ngaysinh;
			newQuannhan.Nguyenquan = nguyenquan;
			newQuannhan.Sinhquan = sinhquan;
			newQuannhan.Truquan = truquan;
			newQuannhan.DcBaotin = dcBaotin;
			newQuannhan.HotenCha = hotenCha;
			newQuannhan.HotenMe = hotenMe;
			newQuannhan.SafeNameHotenVoChong = safeNameHotenVoChong;
			newQuannhan.SoAnhchiem = soAnhchiem;
			newQuannhan.Socon = socon;
			newQuannhan.IdCapbac = idCapbac;
			newQuannhan.IdChucvu = idChucvu;
			newQuannhan.Cnqs = cnqs;
			newQuannhan.Backythuat = backythuat;
			newQuannhan.TrinhdoVanhoa = trinhdoVanhoa;
			newQuannhan.Suckhoe = suckhoe;
			newQuannhan.Ngoaingu = ngoaingu;
			newQuannhan.HangThuongtat = hangThuongtat;
			newQuannhan.TpGiadinh = tpGiadinh;
			newQuannhan.TpBanthan = tpBanthan;
			newQuannhan.IdDantoc = idDantoc;
			newQuannhan.IdTongiao = idTongiao;
			newQuannhan.IdGioitinh = idGioitinh;
			newQuannhan.NgayNhapngu = ngayNhapngu;
			newQuannhan.NgayXuatngu = ngayXuatngu;
			newQuannhan.NgayTaingu = ngayTaingu;
			newQuannhan.NgayVaodoan = ngayVaodoan;
			newQuannhan.NgayVaodang = ngayVaodang;
			newQuannhan.NgayvaodangChinhthuc = ngayvaodangChinhthuc;
			newQuannhan.NgaycaptheQn = ngaycaptheQn;
			newQuannhan.NgaychuyenQncn = ngaychuyenQncn;
			newQuannhan.NgaychuyenCnv = ngaychuyenCnv;
			newQuannhan.IdDonvi = idDonvi;
			newQuannhan.IdLop = idLop;
			newQuannhan.IdLoaiquannhan = idLoaiquannhan;
			newQuannhan.Trangthai = trangthai;
			newQuannhan.Ghichu = ghichu;
			return newQuannhan;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the IdQuannhan property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[ReadOnlyAttribute(false)/*, XmlIgnoreAttribute()*/, DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, true, false)]
		public virtual System.Int32 IdQuannhan
		{
			get
			{
				return this.entityData.IdQuannhan; 
			}
			
			set
			{
				if (this.entityData.IdQuannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdQuannhan, this.entityData.IdQuannhan);
				this.entityData.IdQuannhan = value;
				this.EntityId.IdQuannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdQuannhan, this.entityData.IdQuannhan);
				OnPropertyChanged("IdQuannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaQuannhan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String MaQuannhan
		{
			get
			{
				return this.entityData.MaQuannhan; 
			}
			
			set
			{
				if (this.entityData.MaQuannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.MaQuannhan, this.entityData.MaQuannhan);
				this.entityData.MaQuannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.MaQuannhan, this.entityData.MaQuannhan);
				OnPropertyChanged("MaQuannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HotenKhaisinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String HotenKhaisinh
		{
			get
			{
				return this.entityData.HotenKhaisinh; 
			}
			
			set
			{
				if (this.entityData.HotenKhaisinh == value)
					return;
					
				OnColumnChanging(QuannhanColumn.HotenKhaisinh, this.entityData.HotenKhaisinh);
				this.entityData.HotenKhaisinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.HotenKhaisinh, this.entityData.HotenKhaisinh);
				OnPropertyChanged("HotenKhaisinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HotenThuongdung property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String HotenThuongdung
		{
			get
			{
				return this.entityData.HotenThuongdung; 
			}
			
			set
			{
				if (this.entityData.HotenThuongdung == value)
					return;
					
				OnColumnChanging(QuannhanColumn.HotenThuongdung, this.entityData.HotenThuongdung);
				this.entityData.HotenThuongdung = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.HotenThuongdung, this.entityData.HotenThuongdung);
				OnPropertyChanged("HotenThuongdung");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SotheQuannhan property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SotheQuannhan
		{
			get
			{
				return this.entityData.SotheQuannhan; 
			}
			
			set
			{
				if (this.entityData.SotheQuannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.SotheQuannhan, this.entityData.SotheQuannhan);
				this.entityData.SotheQuannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.SotheQuannhan, this.entityData.SotheQuannhan);
				OnPropertyChanged("SotheQuannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CmtQuannhan property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 CmtQuannhan
		{
			get
			{
				return this.entityData.CmtQuannhan; 
			}
			
			set
			{
				if (this.entityData.CmtQuannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.CmtQuannhan, this.entityData.CmtQuannhan);
				this.entityData.CmtQuannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.CmtQuannhan, this.entityData.CmtQuannhan);
				OnPropertyChanged("CmtQuannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AnhQuannhan property. 
		///		
		/// </summary>
		/// <value>This type is binary.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Byte[] AnhQuannhan
		{
			get
			{
				return this.entityData.AnhQuannhan; 
			}
			
			set
			{
				if (this.entityData.AnhQuannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.AnhQuannhan, this.entityData.AnhQuannhan);
				this.entityData.AnhQuannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.AnhQuannhan, this.entityData.AnhQuannhan);
				OnPropertyChanged("AnhQuannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ngaysinh property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime Ngaysinh
		{
			get
			{
				return this.entityData.Ngaysinh; 
			}
			
			set
			{
				if (this.entityData.Ngaysinh == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Ngaysinh, this.entityData.Ngaysinh);
				this.entityData.Ngaysinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Ngaysinh, this.entityData.Ngaysinh);
				OnPropertyChanged("Ngaysinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Nguyenquan property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String Nguyenquan
		{
			get
			{
				return this.entityData.Nguyenquan; 
			}
			
			set
			{
				if (this.entityData.Nguyenquan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Nguyenquan, this.entityData.Nguyenquan);
				this.entityData.Nguyenquan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Nguyenquan, this.entityData.Nguyenquan);
				OnPropertyChanged("Nguyenquan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Sinhquan property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String Sinhquan
		{
			get
			{
				return this.entityData.Sinhquan; 
			}
			
			set
			{
				if (this.entityData.Sinhquan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Sinhquan, this.entityData.Sinhquan);
				this.entityData.Sinhquan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Sinhquan, this.entityData.Sinhquan);
				OnPropertyChanged("Sinhquan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Truquan property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Truquan
		{
			get
			{
				return this.entityData.Truquan; 
			}
			
			set
			{
				if (this.entityData.Truquan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Truquan, this.entityData.Truquan);
				this.entityData.Truquan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Truquan, this.entityData.Truquan);
				OnPropertyChanged("Truquan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DcBaotin property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String DcBaotin
		{
			get
			{
				return this.entityData.DcBaotin; 
			}
			
			set
			{
				if (this.entityData.DcBaotin == value)
					return;
					
				OnColumnChanging(QuannhanColumn.DcBaotin, this.entityData.DcBaotin);
				this.entityData.DcBaotin = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.DcBaotin, this.entityData.DcBaotin);
				OnPropertyChanged("DcBaotin");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HotenCha property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String HotenCha
		{
			get
			{
				return this.entityData.HotenCha; 
			}
			
			set
			{
				if (this.entityData.HotenCha == value)
					return;
					
				OnColumnChanging(QuannhanColumn.HotenCha, this.entityData.HotenCha);
				this.entityData.HotenCha = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.HotenCha, this.entityData.HotenCha);
				OnPropertyChanged("HotenCha");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HotenMe property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String HotenMe
		{
			get
			{
				return this.entityData.HotenMe; 
			}
			
			set
			{
				if (this.entityData.HotenMe == value)
					return;
					
				OnColumnChanging(QuannhanColumn.HotenMe, this.entityData.HotenMe);
				this.entityData.HotenMe = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.HotenMe, this.entityData.HotenMe);
				OnPropertyChanged("HotenMe");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SafeNameHotenVoChong property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SafeNameHotenVoChong
		{
			get
			{
				return this.entityData.SafeNameHotenVoChong; 
			}
			
			set
			{
				if (this.entityData.SafeNameHotenVoChong == value)
					return;
					
				OnColumnChanging(QuannhanColumn.SafeNameHotenVoChong, this.entityData.SafeNameHotenVoChong);
				this.entityData.SafeNameHotenVoChong = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.SafeNameHotenVoChong, this.entityData.SafeNameHotenVoChong);
				OnPropertyChanged("SafeNameHotenVoChong");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SoAnhchiem property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 SoAnhchiem
		{
			get
			{
				return this.entityData.SoAnhchiem; 
			}
			
			set
			{
				if (this.entityData.SoAnhchiem == value)
					return;
					
				OnColumnChanging(QuannhanColumn.SoAnhchiem, this.entityData.SoAnhchiem);
				this.entityData.SoAnhchiem = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.SoAnhchiem, this.entityData.SoAnhchiem);
				OnPropertyChanged("SoAnhchiem");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Socon property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 Socon
		{
			get
			{
				return this.entityData.Socon; 
			}
			
			set
			{
				if (this.entityData.Socon == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Socon, this.entityData.Socon);
				this.entityData.Socon = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Socon, this.entityData.Socon);
				OnPropertyChanged("Socon");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdCapbac property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdCapbac
		{
			get
			{
				return this.entityData.IdCapbac; 
			}
			
			set
			{
				if (this.entityData.IdCapbac == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdCapbac, this.entityData.IdCapbac);
				this.entityData.IdCapbac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdCapbac, this.entityData.IdCapbac);
				OnPropertyChanged("IdCapbac");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdChucvu property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdChucvu
		{
			get
			{
				return this.entityData.IdChucvu; 
			}
			
			set
			{
				if (this.entityData.IdChucvu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdChucvu, this.entityData.IdChucvu);
				this.entityData.IdChucvu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdChucvu, this.entityData.IdChucvu);
				OnPropertyChanged("IdChucvu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cnqs property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Cnqs
		{
			get
			{
				return this.entityData.Cnqs; 
			}
			
			set
			{
				if (this.entityData.Cnqs == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Cnqs, this.entityData.Cnqs);
				this.entityData.Cnqs = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Cnqs, this.entityData.Cnqs);
				OnPropertyChanged("Cnqs");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Backythuat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Backythuat
		{
			get
			{
				return this.entityData.Backythuat; 
			}
			
			set
			{
				if (this.entityData.Backythuat == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Backythuat, this.entityData.Backythuat);
				this.entityData.Backythuat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Backythuat, this.entityData.Backythuat);
				OnPropertyChanged("Backythuat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrinhdoVanhoa property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String TrinhdoVanhoa
		{
			get
			{
				return this.entityData.TrinhdoVanhoa; 
			}
			
			set
			{
				if (this.entityData.TrinhdoVanhoa == value)
					return;
					
				OnColumnChanging(QuannhanColumn.TrinhdoVanhoa, this.entityData.TrinhdoVanhoa);
				this.entityData.TrinhdoVanhoa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.TrinhdoVanhoa, this.entityData.TrinhdoVanhoa);
				OnPropertyChanged("TrinhdoVanhoa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Suckhoe property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Suckhoe
		{
			get
			{
				return this.entityData.Suckhoe; 
			}
			
			set
			{
				if (this.entityData.Suckhoe == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Suckhoe, this.entityData.Suckhoe);
				this.entityData.Suckhoe = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Suckhoe, this.entityData.Suckhoe);
				OnPropertyChanged("Suckhoe");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ngoaingu property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Ngoaingu
		{
			get
			{
				return this.entityData.Ngoaingu; 
			}
			
			set
			{
				if (this.entityData.Ngoaingu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Ngoaingu, this.entityData.Ngoaingu);
				this.entityData.Ngoaingu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Ngoaingu, this.entityData.Ngoaingu);
				OnPropertyChanged("Ngoaingu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HangThuongtat property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String HangThuongtat
		{
			get
			{
				return this.entityData.HangThuongtat; 
			}
			
			set
			{
				if (this.entityData.HangThuongtat == value)
					return;
					
				OnColumnChanging(QuannhanColumn.HangThuongtat, this.entityData.HangThuongtat);
				this.entityData.HangThuongtat = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.HangThuongtat, this.entityData.HangThuongtat);
				OnPropertyChanged("HangThuongtat");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TpGiadinh property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String TpGiadinh
		{
			get
			{
				return this.entityData.TpGiadinh; 
			}
			
			set
			{
				if (this.entityData.TpGiadinh == value)
					return;
					
				OnColumnChanging(QuannhanColumn.TpGiadinh, this.entityData.TpGiadinh);
				this.entityData.TpGiadinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.TpGiadinh, this.entityData.TpGiadinh);
				OnPropertyChanged("TpGiadinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TpBanthan property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String TpBanthan
		{
			get
			{
				return this.entityData.TpBanthan; 
			}
			
			set
			{
				if (this.entityData.TpBanthan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.TpBanthan, this.entityData.TpBanthan);
				this.entityData.TpBanthan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.TpBanthan, this.entityData.TpBanthan);
				OnPropertyChanged("TpBanthan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdDantoc property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdDantoc
		{
			get
			{
				return this.entityData.IdDantoc; 
			}
			
			set
			{
				if (this.entityData.IdDantoc == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdDantoc, this.entityData.IdDantoc);
				this.entityData.IdDantoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdDantoc, this.entityData.IdDantoc);
				OnPropertyChanged("IdDantoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdTongiao property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdTongiao
		{
			get
			{
				return this.entityData.IdTongiao; 
			}
			
			set
			{
				if (this.entityData.IdTongiao == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdTongiao, this.entityData.IdTongiao);
				this.entityData.IdTongiao = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdTongiao, this.entityData.IdTongiao);
				OnPropertyChanged("IdTongiao");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdGioitinh property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdGioitinh
		{
			get
			{
				return this.entityData.IdGioitinh; 
			}
			
			set
			{
				if (this.entityData.IdGioitinh == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdGioitinh, this.entityData.IdGioitinh);
				this.entityData.IdGioitinh = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdGioitinh, this.entityData.IdGioitinh);
				OnPropertyChanged("IdGioitinh");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayNhapngu property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime NgayNhapngu
		{
			get
			{
				return this.entityData.NgayNhapngu; 
			}
			
			set
			{
				if (this.entityData.NgayNhapngu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayNhapngu, this.entityData.NgayNhapngu);
				this.entityData.NgayNhapngu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayNhapngu, this.entityData.NgayNhapngu);
				OnPropertyChanged("NgayNhapngu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayXuatngu property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayXuatnguNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayXuatngu
		{
			get
			{
				return this.entityData.NgayXuatngu; 
			}
			
			set
			{
				if (this.entityData.NgayXuatngu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayXuatngu, this.entityData.NgayXuatngu);
				this.entityData.NgayXuatngu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayXuatngu, this.entityData.NgayXuatngu);
				OnPropertyChanged("NgayXuatngu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayTaingu property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayTainguNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayTaingu
		{
			get
			{
				return this.entityData.NgayTaingu; 
			}
			
			set
			{
				if (this.entityData.NgayTaingu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayTaingu, this.entityData.NgayTaingu);
				this.entityData.NgayTaingu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayTaingu, this.entityData.NgayTaingu);
				OnPropertyChanged("NgayTaingu");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayVaodoan property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayVaodoanNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayVaodoan
		{
			get
			{
				return this.entityData.NgayVaodoan; 
			}
			
			set
			{
				if (this.entityData.NgayVaodoan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayVaodoan, this.entityData.NgayVaodoan);
				this.entityData.NgayVaodoan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayVaodoan, this.entityData.NgayVaodoan);
				OnPropertyChanged("NgayVaodoan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayVaodang property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayVaodangNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayVaodang
		{
			get
			{
				return this.entityData.NgayVaodang; 
			}
			
			set
			{
				if (this.entityData.NgayVaodang == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayVaodang, this.entityData.NgayVaodang);
				this.entityData.NgayVaodang = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayVaodang, this.entityData.NgayVaodang);
				OnPropertyChanged("NgayVaodang");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgayvaodangChinhthuc property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgayvaodangChinhthucNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgayvaodangChinhthuc
		{
			get
			{
				return this.entityData.NgayvaodangChinhthuc; 
			}
			
			set
			{
				if (this.entityData.NgayvaodangChinhthuc == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgayvaodangChinhthuc, this.entityData.NgayvaodangChinhthuc);
				this.entityData.NgayvaodangChinhthuc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgayvaodangChinhthuc, this.entityData.NgayvaodangChinhthuc);
				OnPropertyChanged("NgayvaodangChinhthuc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgaycaptheQn property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgaycaptheQnNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgaycaptheQn
		{
			get
			{
				return this.entityData.NgaycaptheQn; 
			}
			
			set
			{
				if (this.entityData.NgaycaptheQn == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgaycaptheQn, this.entityData.NgaycaptheQn);
				this.entityData.NgaycaptheQn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgaycaptheQn, this.entityData.NgaycaptheQn);
				OnPropertyChanged("NgaycaptheQn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgaychuyenQncn property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgaychuyenQncnNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgaychuyenQncn
		{
			get
			{
				return this.entityData.NgaychuyenQncn; 
			}
			
			set
			{
				if (this.entityData.NgaychuyenQncn == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgaychuyenQncn, this.entityData.NgaychuyenQncn);
				this.entityData.NgaychuyenQncn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgaychuyenQncn, this.entityData.NgaychuyenQncn);
				OnPropertyChanged("NgaychuyenQncn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NgaychuyenCnv property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsNgaychuyenCnvNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? NgaychuyenCnv
		{
			get
			{
				return this.entityData.NgaychuyenCnv; 
			}
			
			set
			{
				if (this.entityData.NgaychuyenCnv == value)
					return;
					
				OnColumnChanging(QuannhanColumn.NgaychuyenCnv, this.entityData.NgaychuyenCnv);
				this.entityData.NgaychuyenCnv = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.NgaychuyenCnv, this.entityData.NgaychuyenCnv);
				OnPropertyChanged("NgaychuyenCnv");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdDonvi property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdDonvi
		{
			get
			{
				return this.entityData.IdDonvi; 
			}
			
			set
			{
				if (this.entityData.IdDonvi == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdDonvi, this.entityData.IdDonvi);
				this.entityData.IdDonvi = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdDonvi, this.entityData.IdDonvi);
				OnPropertyChanged("IdDonvi");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdLop property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdLop
		{
			get
			{
				return this.entityData.IdLop; 
			}
			
			set
			{
				if (this.entityData.IdLop == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdLop, this.entityData.IdLop);
				this.entityData.IdLop = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdLop, this.entityData.IdLop);
				OnPropertyChanged("IdLop");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdLoaiquannhan property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 IdLoaiquannhan
		{
			get
			{
				return this.entityData.IdLoaiquannhan; 
			}
			
			set
			{
				if (this.entityData.IdLoaiquannhan == value)
					return;
					
				OnColumnChanging(QuannhanColumn.IdLoaiquannhan, this.entityData.IdLoaiquannhan);
				this.entityData.IdLoaiquannhan = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.IdLoaiquannhan, this.entityData.IdLoaiquannhan);
				OnPropertyChanged("IdLoaiquannhan");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Trangthai property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String Trangthai
		{
			get
			{
				return this.entityData.Trangthai; 
			}
			
			set
			{
				if (this.entityData.Trangthai == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Trangthai, this.entityData.Trangthai);
				this.entityData.Trangthai = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Trangthai, this.entityData.Trangthai);
				OnPropertyChanged("Trangthai");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ghichu property. 
		///		
		/// </summary>
		/// <value>This type is ntext.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Ghichu
		{
			get
			{
				return this.entityData.Ghichu; 
			}
			
			set
			{
				if (this.entityData.Ghichu == value)
					return;
					
				OnColumnChanging(QuannhanColumn.Ghichu, this.entityData.Ghichu);
				this.entityData.Ghichu = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(QuannhanColumn.Ghichu, this.entityData.Ghichu);
				OnPropertyChanged("Ghichu");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="Dmgioitinh"/>.
		/// </summary>
		/// <value>The source Dmgioitinh for IdGioitinh.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmgioitinh IdGioitinhSource
      	{
            get { return entityData.IdGioitinhSource; }
            set { entityData.IdGioitinhSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmloaiquannhan"/>.
		/// </summary>
		/// <value>The source Dmloaiquannhan for IdLoaiquannhan.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmloaiquannhan IdLoaiquannhanSource
      	{
            get { return entityData.IdLoaiquannhanSource; }
            set { entityData.IdLoaiquannhanSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmdantoc"/>.
		/// </summary>
		/// <value>The source Dmdantoc for IdDantoc.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmdantoc IdDantocSource
      	{
            get { return entityData.IdDantocSource; }
            set { entityData.IdDantocSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmtongiao"/>.
		/// </summary>
		/// <value>The source Dmtongiao for IdTongiao.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmtongiao IdTongiaoSource
      	{
            get { return entityData.IdTongiaoSource; }
            set { entityData.IdTongiaoSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmdonvi"/>.
		/// </summary>
		/// <value>The source Dmdonvi for IdDonvi.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmdonvi IdDonviSource
      	{
            get { return entityData.IdDonviSource; }
            set { entityData.IdDonviSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmcapbac"/>.
		/// </summary>
		/// <value>The source Dmcapbac for IdCapbac.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmcapbac IdCapbacSource
      	{
            get { return entityData.IdCapbacSource; }
            set { entityData.IdCapbacSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmchucvu"/>.
		/// </summary>
		/// <value>The source Dmchucvu for IdChucvu.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmchucvu IdChucvuSource
      	{
            get { return entityData.IdChucvuSource; }
            set { entityData.IdChucvuSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="Dmlop"/>.
		/// </summary>
		/// <value>The source Dmlop for IdLop.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual Dmlop IdLopSource
      	{
            get { return entityData.IdLopSource; }
            set { entityData.IdLopSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of Lschucvu objects
		///	which are related to this object through the relation FK_LSCHUCVU_QUANNHAN1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lschucvu> LschucvuCollection
		{
			get { return entityData.LschucvuCollection; }
			set { entityData.LschucvuCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Lscapbac objects
		///	which are related to this object through the relation FK_LSCAPBAC_QUANNHAN1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lscapbac> LscapbacCollection
		{
			get { return entityData.LscapbacCollection; }
			set { entityData.LscapbacCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Lskyluat objects
		///	which are related to this object through the relation FK_LSKYLUAT_QUANNHAN1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lskyluat> LskyluatCollection
		{
			get { return entityData.LskyluatCollection; }
			set { entityData.LskyluatCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Lskhenthuong objects
		///	which are related to this object through the relation FK_LSKHENTHUONG_QUANNHAN1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lskhenthuong> LskhenthuongCollection
		{
			get { return entityData.LskhenthuongCollection; }
			set { entityData.LskhenthuongCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of Lstruonglop objects
		///	which are related to this object through the relation FK_LSTRUONGLOP_QUANNHAN1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<Lstruonglop> LstruonglopCollection
		{
			get { return entityData.LstruonglopCollection; }
			set { entityData.LstruonglopCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("MaQuannhan", "Ma Quannhan"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("MaQuannhan", "Ma Quannhan", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("HotenKhaisinh", "Hoten Khaisinh"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("HotenKhaisinh", "Hoten Khaisinh", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("HotenThuongdung", "Hoten Thuongdung"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("HotenThuongdung", "Hoten Thuongdung", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("Nguyenquan", "Nguyenquan"));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("Sinhquan", "Sinhquan"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("HotenCha", "Hoten Cha", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("HotenMe", "Hoten Me", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("SafeNameHotenVoChong", "Hoten Vo( Chong)", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Cnqs", "Cnqs", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Backythuat", "Backythuat", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("TrinhdoVanhoa", "Trinhdo Vanhoa"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("TrinhdoVanhoa", "Trinhdo Vanhoa", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Suckhoe", "Suckhoe", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Ngoaingu", "Ngoaingu", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("HangThuongtat", "Hang Thuongtat", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("TpGiadinh", "Tp Giadinh", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("TpBanthan", "Tp Banthan", 50));
			ValidationRules.AddRule(
				Validation.CommonRules.NotNull,
				new Validation.ValidationRuleArgs("Trangthai", "Trangthai"));
			ValidationRules.AddRule(
				Validation.CommonRules.StringMaxLength, 
				new Validation.CommonRules.MaxLengthRuleArgs("Trangthai", "Trangthai", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "QUANNHAN"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ID_QUANNHAN", "MA_QUANNHAN", "HOTEN_KHAISINH", "HOTEN_THUONGDUNG", "SOTHE_QUANNHAN", "CMT_QUANNHAN", "ANH_QUANNHAN", "NGAYSINH", "NGUYENQUAN", "SINHQUAN", "TRUQUAN", "DC_BAOTIN", "HOTEN_CHA", "HOTEN_ME", "HOTEN_VO(CHONG)", "SO_ANHCHIEM", "SOCON", "ID_CAPBAC", "ID_CHUCVU", "CNQS", "BACKYTHUAT", "TRINHDO_VANHOA", "SUCKHOE", "NGOAINGU", "HANG_THUONGTAT", "TP_GIADINH", "TP_BANTHAN", "ID_DANTOC", "ID_TONGIAO", "ID_GIOITINH", "NGAY_NHAPNGU", "NGAY_XUATNGU", "NGAY_TAINGU", "NGAY_VAODOAN", "NGAY_VAODANG", "NGAYVAODANG_CHINHTHUC", "NGAYCAPTHE_QN", "NGAYCHUYEN_QNCN", "NGAYCHUYEN_CNV", "ID_DONVI", "ID_LOP", "ID_LOAIQUANNHAN", "TRANGTHAI", "GHICHU"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as QuannhanEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (Quannhan) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<Quannhan>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as Quannhan);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed Quannhan Entity 
		///</summary>
		public virtual Quannhan Copy()
		{
			//shallow copy entity
			Quannhan copy = new Quannhan();
			copy.SuppressEntityEvents = true;
			copy.IdQuannhan = this.IdQuannhan;
			copy.MaQuannhan = this.MaQuannhan;
			copy.HotenKhaisinh = this.HotenKhaisinh;
			copy.HotenThuongdung = this.HotenThuongdung;
			copy.SotheQuannhan = this.SotheQuannhan;
			copy.CmtQuannhan = this.CmtQuannhan;
			copy.AnhQuannhan = this.AnhQuannhan;
			copy.Ngaysinh = this.Ngaysinh;
			copy.Nguyenquan = this.Nguyenquan;
			copy.Sinhquan = this.Sinhquan;
			copy.Truquan = this.Truquan;
			copy.DcBaotin = this.DcBaotin;
			copy.HotenCha = this.HotenCha;
			copy.HotenMe = this.HotenMe;
			copy.SafeNameHotenVoChong = this.SafeNameHotenVoChong;
			copy.SoAnhchiem = this.SoAnhchiem;
			copy.Socon = this.Socon;
			copy.IdCapbac = this.IdCapbac;
			copy.IdChucvu = this.IdChucvu;
			copy.Cnqs = this.Cnqs;
			copy.Backythuat = this.Backythuat;
			copy.TrinhdoVanhoa = this.TrinhdoVanhoa;
			copy.Suckhoe = this.Suckhoe;
			copy.Ngoaingu = this.Ngoaingu;
			copy.HangThuongtat = this.HangThuongtat;
			copy.TpGiadinh = this.TpGiadinh;
			copy.TpBanthan = this.TpBanthan;
			copy.IdDantoc = this.IdDantoc;
			copy.IdTongiao = this.IdTongiao;
			copy.IdGioitinh = this.IdGioitinh;
			copy.NgayNhapngu = this.NgayNhapngu;
			copy.NgayXuatngu = this.NgayXuatngu;
			copy.NgayTaingu = this.NgayTaingu;
			copy.NgayVaodoan = this.NgayVaodoan;
			copy.NgayVaodang = this.NgayVaodang;
			copy.NgayvaodangChinhthuc = this.NgayvaodangChinhthuc;
			copy.NgaycaptheQn = this.NgaycaptheQn;
			copy.NgaychuyenQncn = this.NgaychuyenQncn;
			copy.NgaychuyenCnv = this.NgaychuyenCnv;
			copy.IdDonvi = this.IdDonvi;
			copy.IdLop = this.IdLop;
			copy.IdLoaiquannhan = this.IdLoaiquannhan;
			copy.Trangthai = this.Trangthai;
			copy.Ghichu = this.Ghichu;
			
			copy.IdGioitinhSource = MakeCopyOf(this.IdGioitinhSource) as Dmgioitinh;
			copy.IdLoaiquannhanSource = MakeCopyOf(this.IdLoaiquannhanSource) as Dmloaiquannhan;
			copy.IdDantocSource = MakeCopyOf(this.IdDantocSource) as Dmdantoc;
			copy.IdTongiaoSource = MakeCopyOf(this.IdTongiaoSource) as Dmtongiao;
			copy.IdDonviSource = MakeCopyOf(this.IdDonviSource) as Dmdonvi;
			copy.IdCapbacSource = MakeCopyOf(this.IdCapbacSource) as Dmcapbac;
			copy.IdChucvuSource = MakeCopyOf(this.IdChucvuSource) as Dmchucvu;
			copy.IdLopSource = MakeCopyOf(this.IdLopSource) as Dmlop;
		
			//deep copy nested objects
			copy.LschucvuCollection = (TList<Lschucvu>) MakeCopyOf(this.LschucvuCollection); 
			copy.LscapbacCollection = (TList<Lscapbac>) MakeCopyOf(this.LscapbacCollection); 
			copy.LskyluatCollection = (TList<Lskyluat>) MakeCopyOf(this.LskyluatCollection); 
			copy.LskhenthuongCollection = (TList<Lskhenthuong>) MakeCopyOf(this.LskhenthuongCollection); 
			copy.LstruonglopCollection = (TList<Lstruonglop>) MakeCopyOf(this.LstruonglopCollection); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		///  Returns a Typed Quannhan Entity which is a deep copy of the current entity.
		///</summary>
		public virtual Quannhan DeepCopy()
		{
			return EntityHelper.Clone<Quannhan>(this as Quannhan);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as QuannhanEntityData;
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as QuannhanEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(QuannhanColumn column)
		{
			switch(column)
			{
					case QuannhanColumn.IdQuannhan:
					return entityData.IdQuannhan != _originalData.IdQuannhan;
					case QuannhanColumn.MaQuannhan:
					return entityData.MaQuannhan != _originalData.MaQuannhan;
					case QuannhanColumn.HotenKhaisinh:
					return entityData.HotenKhaisinh != _originalData.HotenKhaisinh;
					case QuannhanColumn.HotenThuongdung:
					return entityData.HotenThuongdung != _originalData.HotenThuongdung;
					case QuannhanColumn.SotheQuannhan:
					return entityData.SotheQuannhan != _originalData.SotheQuannhan;
					case QuannhanColumn.CmtQuannhan:
					return entityData.CmtQuannhan != _originalData.CmtQuannhan;
					case QuannhanColumn.AnhQuannhan:
					return entityData.AnhQuannhan != _originalData.AnhQuannhan;
					case QuannhanColumn.Ngaysinh:
					return entityData.Ngaysinh != _originalData.Ngaysinh;
					case QuannhanColumn.Nguyenquan:
					return entityData.Nguyenquan != _originalData.Nguyenquan;
					case QuannhanColumn.Sinhquan:
					return entityData.Sinhquan != _originalData.Sinhquan;
					case QuannhanColumn.Truquan:
					return entityData.Truquan != _originalData.Truquan;
					case QuannhanColumn.DcBaotin:
					return entityData.DcBaotin != _originalData.DcBaotin;
					case QuannhanColumn.HotenCha:
					return entityData.HotenCha != _originalData.HotenCha;
					case QuannhanColumn.HotenMe:
					return entityData.HotenMe != _originalData.HotenMe;
					case QuannhanColumn.SafeNameHotenVoChong:
					return entityData.SafeNameHotenVoChong != _originalData.SafeNameHotenVoChong;
					case QuannhanColumn.SoAnhchiem:
					return entityData.SoAnhchiem != _originalData.SoAnhchiem;
					case QuannhanColumn.Socon:
					return entityData.Socon != _originalData.Socon;
					case QuannhanColumn.IdCapbac:
					return entityData.IdCapbac != _originalData.IdCapbac;
					case QuannhanColumn.IdChucvu:
					return entityData.IdChucvu != _originalData.IdChucvu;
					case QuannhanColumn.Cnqs:
					return entityData.Cnqs != _originalData.Cnqs;
					case QuannhanColumn.Backythuat:
					return entityData.Backythuat != _originalData.Backythuat;
					case QuannhanColumn.TrinhdoVanhoa:
					return entityData.TrinhdoVanhoa != _originalData.TrinhdoVanhoa;
					case QuannhanColumn.Suckhoe:
					return entityData.Suckhoe != _originalData.Suckhoe;
					case QuannhanColumn.Ngoaingu:
					return entityData.Ngoaingu != _originalData.Ngoaingu;
					case QuannhanColumn.HangThuongtat:
					return entityData.HangThuongtat != _originalData.HangThuongtat;
					case QuannhanColumn.TpGiadinh:
					return entityData.TpGiadinh != _originalData.TpGiadinh;
					case QuannhanColumn.TpBanthan:
					return entityData.TpBanthan != _originalData.TpBanthan;
					case QuannhanColumn.IdDantoc:
					return entityData.IdDantoc != _originalData.IdDantoc;
					case QuannhanColumn.IdTongiao:
					return entityData.IdTongiao != _originalData.IdTongiao;
					case QuannhanColumn.IdGioitinh:
					return entityData.IdGioitinh != _originalData.IdGioitinh;
					case QuannhanColumn.NgayNhapngu:
					return entityData.NgayNhapngu != _originalData.NgayNhapngu;
					case QuannhanColumn.NgayXuatngu:
					return entityData.NgayXuatngu != _originalData.NgayXuatngu;
					case QuannhanColumn.NgayTaingu:
					return entityData.NgayTaingu != _originalData.NgayTaingu;
					case QuannhanColumn.NgayVaodoan:
					return entityData.NgayVaodoan != _originalData.NgayVaodoan;
					case QuannhanColumn.NgayVaodang:
					return entityData.NgayVaodang != _originalData.NgayVaodang;
					case QuannhanColumn.NgayvaodangChinhthuc:
					return entityData.NgayvaodangChinhthuc != _originalData.NgayvaodangChinhthuc;
					case QuannhanColumn.NgaycaptheQn:
					return entityData.NgaycaptheQn != _originalData.NgaycaptheQn;
					case QuannhanColumn.NgaychuyenQncn:
					return entityData.NgaychuyenQncn != _originalData.NgaychuyenQncn;
					case QuannhanColumn.NgaychuyenCnv:
					return entityData.NgaychuyenCnv != _originalData.NgaychuyenCnv;
					case QuannhanColumn.IdDonvi:
					return entityData.IdDonvi != _originalData.IdDonvi;
					case QuannhanColumn.IdLop:
					return entityData.IdLop != _originalData.IdLop;
					case QuannhanColumn.IdLoaiquannhan:
					return entityData.IdLoaiquannhan != _originalData.IdLoaiquannhan;
					case QuannhanColumn.Trangthai:
					return entityData.Trangthai != _originalData.Trangthai;
					case QuannhanColumn.Ghichu:
					return entityData.Ghichu != _originalData.Ghichu;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if [has data changed]; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.IdQuannhan != _originalData.IdQuannhan;
			result = result || entityData.MaQuannhan != _originalData.MaQuannhan;
			result = result || entityData.HotenKhaisinh != _originalData.HotenKhaisinh;
			result = result || entityData.HotenThuongdung != _originalData.HotenThuongdung;
			result = result || entityData.SotheQuannhan != _originalData.SotheQuannhan;
			result = result || entityData.CmtQuannhan != _originalData.CmtQuannhan;
			result = result || entityData.AnhQuannhan != _originalData.AnhQuannhan;
			result = result || entityData.Ngaysinh != _originalData.Ngaysinh;
			result = result || entityData.Nguyenquan != _originalData.Nguyenquan;
			result = result || entityData.Sinhquan != _originalData.Sinhquan;
			result = result || entityData.Truquan != _originalData.Truquan;
			result = result || entityData.DcBaotin != _originalData.DcBaotin;
			result = result || entityData.HotenCha != _originalData.HotenCha;
			result = result || entityData.HotenMe != _originalData.HotenMe;
			result = result || entityData.SafeNameHotenVoChong != _originalData.SafeNameHotenVoChong;
			result = result || entityData.SoAnhchiem != _originalData.SoAnhchiem;
			result = result || entityData.Socon != _originalData.Socon;
			result = result || entityData.IdCapbac != _originalData.IdCapbac;
			result = result || entityData.IdChucvu != _originalData.IdChucvu;
			result = result || entityData.Cnqs != _originalData.Cnqs;
			result = result || entityData.Backythuat != _originalData.Backythuat;
			result = result || entityData.TrinhdoVanhoa != _originalData.TrinhdoVanhoa;
			result = result || entityData.Suckhoe != _originalData.Suckhoe;
			result = result || entityData.Ngoaingu != _originalData.Ngoaingu;
			result = result || entityData.HangThuongtat != _originalData.HangThuongtat;
			result = result || entityData.TpGiadinh != _originalData.TpGiadinh;
			result = result || entityData.TpBanthan != _originalData.TpBanthan;
			result = result || entityData.IdDantoc != _originalData.IdDantoc;
			result = result || entityData.IdTongiao != _originalData.IdTongiao;
			result = result || entityData.IdGioitinh != _originalData.IdGioitinh;
			result = result || entityData.NgayNhapngu != _originalData.NgayNhapngu;
			result = result || entityData.NgayXuatngu != _originalData.NgayXuatngu;
			result = result || entityData.NgayTaingu != _originalData.NgayTaingu;
			result = result || entityData.NgayVaodoan != _originalData.NgayVaodoan;
			result = result || entityData.NgayVaodang != _originalData.NgayVaodang;
			result = result || entityData.NgayvaodangChinhthuc != _originalData.NgayvaodangChinhthuc;
			result = result || entityData.NgaycaptheQn != _originalData.NgaycaptheQn;
			result = result || entityData.NgaychuyenQncn != _originalData.NgaychuyenQncn;
			result = result || entityData.NgaychuyenCnv != _originalData.NgaychuyenCnv;
			result = result || entityData.IdDonvi != _originalData.IdDonvi;
			result = result || entityData.IdLop != _originalData.IdLop;
			result = result || entityData.IdLoaiquannhan != _originalData.IdLoaiquannhan;
			result = result || entityData.Trangthai != _originalData.Trangthai;
			result = result || entityData.Ghichu != _originalData.Ghichu;
			return result;
}	
		
		#endregion

        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="QuannhanBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			if (Object1 is QuannhanBase)
				return Equals(this, (QuannhanBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="QuannhanBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.IdQuannhan.GetHashCode() ^ 
					this.MaQuannhan.GetHashCode() ^ 
					this.HotenKhaisinh.GetHashCode() ^ 
					this.HotenThuongdung.GetHashCode() ^ 
					this.SotheQuannhan.GetHashCode() ^ 
					this.CmtQuannhan.GetHashCode() ^ 
					((this.AnhQuannhan == null) ? string.Empty : this.AnhQuannhan.ToString()).GetHashCode() ^ 
					this.Ngaysinh.GetHashCode() ^ 
					this.Nguyenquan.GetHashCode() ^ 
					this.Sinhquan.GetHashCode() ^ 
					((this.Truquan == null) ? string.Empty : this.Truquan.ToString()).GetHashCode() ^ 
					((this.DcBaotin == null) ? string.Empty : this.DcBaotin.ToString()).GetHashCode() ^ 
					((this.HotenCha == null) ? string.Empty : this.HotenCha.ToString()).GetHashCode() ^ 
					((this.HotenMe == null) ? string.Empty : this.HotenMe.ToString()).GetHashCode() ^ 
					((this.SafeNameHotenVoChong == null) ? string.Empty : this.SafeNameHotenVoChong.ToString()).GetHashCode() ^ 
					this.SoAnhchiem.GetHashCode() ^ 
					this.Socon.GetHashCode() ^ 
					this.IdCapbac.GetHashCode() ^ 
					this.IdChucvu.GetHashCode() ^ 
					((this.Cnqs == null) ? string.Empty : this.Cnqs.ToString()).GetHashCode() ^ 
					((this.Backythuat == null) ? string.Empty : this.Backythuat.ToString()).GetHashCode() ^ 
					this.TrinhdoVanhoa.GetHashCode() ^ 
					((this.Suckhoe == null) ? string.Empty : this.Suckhoe.ToString()).GetHashCode() ^ 
					((this.Ngoaingu == null) ? string.Empty : this.Ngoaingu.ToString()).GetHashCode() ^ 
					((this.HangThuongtat == null) ? string.Empty : this.HangThuongtat.ToString()).GetHashCode() ^ 
					((this.TpGiadinh == null) ? string.Empty : this.TpGiadinh.ToString()).GetHashCode() ^ 
					((this.TpBanthan == null) ? string.Empty : this.TpBanthan.ToString()).GetHashCode() ^ 
					this.IdDantoc.GetHashCode() ^ 
					this.IdTongiao.GetHashCode() ^ 
					this.IdGioitinh.GetHashCode() ^ 
					this.NgayNhapngu.GetHashCode() ^ 
					((this.NgayXuatngu == null) ? string.Empty : this.NgayXuatngu.ToString()).GetHashCode() ^ 
					((this.NgayTaingu == null) ? string.Empty : this.NgayTaingu.ToString()).GetHashCode() ^ 
					((this.NgayVaodoan == null) ? string.Empty : this.NgayVaodoan.ToString()).GetHashCode() ^ 
					((this.NgayVaodang == null) ? string.Empty : this.NgayVaodang.ToString()).GetHashCode() ^ 
					((this.NgayvaodangChinhthuc == null) ? string.Empty : this.NgayvaodangChinhthuc.ToString()).GetHashCode() ^ 
					((this.NgaycaptheQn == null) ? string.Empty : this.NgaycaptheQn.ToString()).GetHashCode() ^ 
					((this.NgaychuyenQncn == null) ? string.Empty : this.NgaychuyenQncn.ToString()).GetHashCode() ^ 
					((this.NgaychuyenCnv == null) ? string.Empty : this.NgaychuyenCnv.ToString()).GetHashCode() ^ 
					this.IdDonvi.GetHashCode() ^ 
					this.IdLop.GetHashCode() ^ 
					this.IdLoaiquannhan.GetHashCode() ^ 
					this.Trangthai.GetHashCode() ^ 
					((this.Ghichu == null) ? string.Empty : this.Ghichu.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="QuannhanBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(QuannhanBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="QuannhanBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="QuannhanBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="QuannhanBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(QuannhanBase Object1, QuannhanBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.IdQuannhan != Object2.IdQuannhan)
				equal = false;
			if (Object1.MaQuannhan != Object2.MaQuannhan)
				equal = false;
			if (Object1.HotenKhaisinh != Object2.HotenKhaisinh)
				equal = false;
			if (Object1.HotenThuongdung != Object2.HotenThuongdung)
				equal = false;
			if (Object1.SotheQuannhan != Object2.SotheQuannhan)
				equal = false;
			if (Object1.CmtQuannhan != Object2.CmtQuannhan)
				equal = false;
			if ( Object1.AnhQuannhan != null && Object2.AnhQuannhan != null )
			{
				if (Object1.AnhQuannhan != Object2.AnhQuannhan)
					equal = false;
			}
			else if (Object1.AnhQuannhan == null ^ Object2.AnhQuannhan == null )
			{
				equal = false;
			}
			if (Object1.Ngaysinh != Object2.Ngaysinh)
				equal = false;
			if (Object1.Nguyenquan != Object2.Nguyenquan)
				equal = false;
			if (Object1.Sinhquan != Object2.Sinhquan)
				equal = false;
			if ( Object1.Truquan != null && Object2.Truquan != null )
			{
				if (Object1.Truquan != Object2.Truquan)
					equal = false;
			}
			else if (Object1.Truquan == null ^ Object2.Truquan == null )
			{
				equal = false;
			}
			if ( Object1.DcBaotin != null && Object2.DcBaotin != null )
			{
				if (Object1.DcBaotin != Object2.DcBaotin)
					equal = false;
			}
			else if (Object1.DcBaotin == null ^ Object2.DcBaotin == null )
			{
				equal = false;
			}
			if ( Object1.HotenCha != null && Object2.HotenCha != null )
			{
				if (Object1.HotenCha != Object2.HotenCha)
					equal = false;
			}
			else if (Object1.HotenCha == null ^ Object2.HotenCha == null )
			{
				equal = false;
			}
			if ( Object1.HotenMe != null && Object2.HotenMe != null )
			{
				if (Object1.HotenMe != Object2.HotenMe)
					equal = false;
			}
			else if (Object1.HotenMe == null ^ Object2.HotenMe == null )
			{
				equal = false;
			}
			if ( Object1.SafeNameHotenVoChong != null && Object2.SafeNameHotenVoChong != null )
			{
				if (Object1.SafeNameHotenVoChong != Object2.SafeNameHotenVoChong)
					equal = false;
			}
			else if (Object1.SafeNameHotenVoChong == null ^ Object2.SafeNameHotenVoChong == null )
			{
				equal = false;
			}
			if (Object1.SoAnhchiem != Object2.SoAnhchiem)
				equal = false;
			if (Object1.Socon != Object2.Socon)
				equal = false;
			if (Object1.IdCapbac != Object2.IdCapbac)
				equal = false;
			if (Object1.IdChucvu != Object2.IdChucvu)
				equal = false;
			if ( Object1.Cnqs != null && Object2.Cnqs != null )
			{
				if (Object1.Cnqs != Object2.Cnqs)
					equal = false;
			}
			else if (Object1.Cnqs == null ^ Object2.Cnqs == null )
			{
				equal = false;
			}
			if ( Object1.Backythuat != null && Object2.Backythuat != null )
			{
				if (Object1.Backythuat != Object2.Backythuat)
					equal = false;
			}
			else if (Object1.Backythuat == null ^ Object2.Backythuat == null )
			{
				equal = false;
			}
			if (Object1.TrinhdoVanhoa != Object2.TrinhdoVanhoa)
				equal = false;
			if ( Object1.Suckhoe != null && Object2.Suckhoe != null )
			{
				if (Object1.Suckhoe != Object2.Suckhoe)
					equal = false;
			}
			else if (Object1.Suckhoe == null ^ Object2.Suckhoe == null )
			{
				equal = false;
			}
			if ( Object1.Ngoaingu != null && Object2.Ngoaingu != null )
			{
				if (Object1.Ngoaingu != Object2.Ngoaingu)
					equal = false;
			}
			else if (Object1.Ngoaingu == null ^ Object2.Ngoaingu == null )
			{
				equal = false;
			}
			if ( Object1.HangThuongtat != null && Object2.HangThuongtat != null )
			{
				if (Object1.HangThuongtat != Object2.HangThuongtat)
					equal = false;
			}
			else if (Object1.HangThuongtat == null ^ Object2.HangThuongtat == null )
			{
				equal = false;
			}
			if ( Object1.TpGiadinh != null && Object2.TpGiadinh != null )
			{
				if (Object1.TpGiadinh != Object2.TpGiadinh)
					equal = false;
			}
			else if (Object1.TpGiadinh == null ^ Object2.TpGiadinh == null )
			{
				equal = false;
			}
			if ( Object1.TpBanthan != null && Object2.TpBanthan != null )
			{
				if (Object1.TpBanthan != Object2.TpBanthan)
					equal = false;
			}
			else if (Object1.TpBanthan == null ^ Object2.TpBanthan == null )
			{
				equal = false;
			}
			if (Object1.IdDantoc != Object2.IdDantoc)
				equal = false;
			if (Object1.IdTongiao != Object2.IdTongiao)
				equal = false;
			if (Object1.IdGioitinh != Object2.IdGioitinh)
				equal = false;
			if (Object1.NgayNhapngu != Object2.NgayNhapngu)
				equal = false;
			if ( Object1.NgayXuatngu != null && Object2.NgayXuatngu != null )
			{
				if (Object1.NgayXuatngu != Object2.NgayXuatngu)
					equal = false;
			}
			else if (Object1.NgayXuatngu == null ^ Object2.NgayXuatngu == null )
			{
				equal = false;
			}
			if ( Object1.NgayTaingu != null && Object2.NgayTaingu != null )
			{
				if (Object1.NgayTaingu != Object2.NgayTaingu)
					equal = false;
			}
			else if (Object1.NgayTaingu == null ^ Object2.NgayTaingu == null )
			{
				equal = false;
			}
			if ( Object1.NgayVaodoan != null && Object2.NgayVaodoan != null )
			{
				if (Object1.NgayVaodoan != Object2.NgayVaodoan)
					equal = false;
			}
			else if (Object1.NgayVaodoan == null ^ Object2.NgayVaodoan == null )
			{
				equal = false;
			}
			if ( Object1.NgayVaodang != null && Object2.NgayVaodang != null )
			{
				if (Object1.NgayVaodang != Object2.NgayVaodang)
					equal = false;
			}
			else if (Object1.NgayVaodang == null ^ Object2.NgayVaodang == null )
			{
				equal = false;
			}
			if ( Object1.NgayvaodangChinhthuc != null && Object2.NgayvaodangChinhthuc != null )
			{
				if (Object1.NgayvaodangChinhthuc != Object2.NgayvaodangChinhthuc)
					equal = false;
			}
			else if (Object1.NgayvaodangChinhthuc == null ^ Object2.NgayvaodangChinhthuc == null )
			{
				equal = false;
			}
			if ( Object1.NgaycaptheQn != null && Object2.NgaycaptheQn != null )
			{
				if (Object1.NgaycaptheQn != Object2.NgaycaptheQn)
					equal = false;
			}
			else if (Object1.NgaycaptheQn == null ^ Object2.NgaycaptheQn == null )
			{
				equal = false;
			}
			if ( Object1.NgaychuyenQncn != null && Object2.NgaychuyenQncn != null )
			{
				if (Object1.NgaychuyenQncn != Object2.NgaychuyenQncn)
					equal = false;
			}
			else if (Object1.NgaychuyenQncn == null ^ Object2.NgaychuyenQncn == null )
			{
				equal = false;
			}
			if ( Object1.NgaychuyenCnv != null && Object2.NgaychuyenCnv != null )
			{
				if (Object1.NgaychuyenCnv != Object2.NgaychuyenCnv)
					equal = false;
			}
			else if (Object1.NgaychuyenCnv == null ^ Object2.NgaychuyenCnv == null )
			{
				equal = false;
			}
			if (Object1.IdDonvi != Object2.IdDonvi)
				equal = false;
			if (Object1.IdLop != Object2.IdLop)
				equal = false;
			if (Object1.IdLoaiquannhan != Object2.IdLoaiquannhan)
				equal = false;
			if (Object1.Trangthai != Object2.Trangthai)
				equal = false;
			if ( Object1.Ghichu != null && Object2.Ghichu != null )
			{
				if (Object1.Ghichu != Object2.Ghichu)
					equal = false;
			}
			else if (Object1.Ghichu == null ^ Object2.Ghichu == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((QuannhanBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static QuannhanComparer GetComparer()
        {
            return new QuannhanComparer();
        }
        */

        // Comparer delegates back to Quannhan
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(Quannhan rhs, QuannhanColumn which)
        {
            switch (which)
            {
            	
            	
            	case QuannhanColumn.IdQuannhan:
            		return this.IdQuannhan.CompareTo(rhs.IdQuannhan);
            		
            		                 
            	
            	
            	case QuannhanColumn.MaQuannhan:
            		return this.MaQuannhan.CompareTo(rhs.MaQuannhan);
            		
            		                 
            	
            	
            	case QuannhanColumn.HotenKhaisinh:
            		return this.HotenKhaisinh.CompareTo(rhs.HotenKhaisinh);
            		
            		                 
            	
            	
            	case QuannhanColumn.HotenThuongdung:
            		return this.HotenThuongdung.CompareTo(rhs.HotenThuongdung);
            		
            		                 
            	
            	
            	case QuannhanColumn.SotheQuannhan:
            		return this.SotheQuannhan.CompareTo(rhs.SotheQuannhan);
            		
            		                 
            	
            	
            	case QuannhanColumn.CmtQuannhan:
            		return this.CmtQuannhan.CompareTo(rhs.CmtQuannhan);
            		
            		                 
            	
            		                 
            	
            	
            	case QuannhanColumn.Ngaysinh:
            		return this.Ngaysinh.CompareTo(rhs.Ngaysinh);
            		
            		                 
            	
            	
            	case QuannhanColumn.Nguyenquan:
            		return this.Nguyenquan.CompareTo(rhs.Nguyenquan);
            		
            		                 
            	
            	
            	case QuannhanColumn.Sinhquan:
            		return this.Sinhquan.CompareTo(rhs.Sinhquan);
            		
            		                 
            	
            	
            	case QuannhanColumn.Truquan:
            		return this.Truquan.CompareTo(rhs.Truquan);
            		
            		                 
            	
            	
            	case QuannhanColumn.DcBaotin:
            		return this.DcBaotin.CompareTo(rhs.DcBaotin);
            		
            		                 
            	
            	
            	case QuannhanColumn.HotenCha:
            		return this.HotenCha.CompareTo(rhs.HotenCha);
            		
            		                 
            	
            	
            	case QuannhanColumn.HotenMe:
            		return this.HotenMe.CompareTo(rhs.HotenMe);
            		
            		                 
            	
            	
            	case QuannhanColumn.SafeNameHotenVoChong:
            		return this.SafeNameHotenVoChong.CompareTo(rhs.SafeNameHotenVoChong);
            		
            		                 
            	
            	
            	case QuannhanColumn.SoAnhchiem:
            		return this.SoAnhchiem.CompareTo(rhs.SoAnhchiem);
            		
            		                 
            	
            	
            	case QuannhanColumn.Socon:
            		return this.Socon.CompareTo(rhs.Socon);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdCapbac:
            		return this.IdCapbac.CompareTo(rhs.IdCapbac);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdChucvu:
            		return this.IdChucvu.CompareTo(rhs.IdChucvu);
            		
            		                 
            	
            	
            	case QuannhanColumn.Cnqs:
            		return this.Cnqs.CompareTo(rhs.Cnqs);
            		
            		                 
            	
            	
            	case QuannhanColumn.Backythuat:
            		return this.Backythuat.CompareTo(rhs.Backythuat);
            		
            		                 
            	
            	
            	case QuannhanColumn.TrinhdoVanhoa:
            		return this.TrinhdoVanhoa.CompareTo(rhs.TrinhdoVanhoa);
            		
            		                 
            	
            	
            	case QuannhanColumn.Suckhoe:
            		return this.Suckhoe.CompareTo(rhs.Suckhoe);
            		
            		                 
            	
            	
            	case QuannhanColumn.Ngoaingu:
            		return this.Ngoaingu.CompareTo(rhs.Ngoaingu);
            		
            		                 
            	
            	
            	case QuannhanColumn.HangThuongtat:
            		return this.HangThuongtat.CompareTo(rhs.HangThuongtat);
            		
            		                 
            	
            	
            	case QuannhanColumn.TpGiadinh:
            		return this.TpGiadinh.CompareTo(rhs.TpGiadinh);
            		
            		                 
            	
            	
            	case QuannhanColumn.TpBanthan:
            		return this.TpBanthan.CompareTo(rhs.TpBanthan);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdDantoc:
            		return this.IdDantoc.CompareTo(rhs.IdDantoc);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdTongiao:
            		return this.IdTongiao.CompareTo(rhs.IdTongiao);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdGioitinh:
            		return this.IdGioitinh.CompareTo(rhs.IdGioitinh);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayNhapngu:
            		return this.NgayNhapngu.CompareTo(rhs.NgayNhapngu);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayXuatngu:
            		return this.NgayXuatngu.Value.CompareTo(rhs.NgayXuatngu.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayTaingu:
            		return this.NgayTaingu.Value.CompareTo(rhs.NgayTaingu.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayVaodoan:
            		return this.NgayVaodoan.Value.CompareTo(rhs.NgayVaodoan.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayVaodang:
            		return this.NgayVaodang.Value.CompareTo(rhs.NgayVaodang.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgayvaodangChinhthuc:
            		return this.NgayvaodangChinhthuc.Value.CompareTo(rhs.NgayvaodangChinhthuc.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgaycaptheQn:
            		return this.NgaycaptheQn.Value.CompareTo(rhs.NgaycaptheQn.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgaychuyenQncn:
            		return this.NgaychuyenQncn.Value.CompareTo(rhs.NgaychuyenQncn.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.NgaychuyenCnv:
            		return this.NgaychuyenCnv.Value.CompareTo(rhs.NgaychuyenCnv.Value);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdDonvi:
            		return this.IdDonvi.CompareTo(rhs.IdDonvi);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdLop:
            		return this.IdLop.CompareTo(rhs.IdLop);
            		
            		                 
            	
            	
            	case QuannhanColumn.IdLoaiquannhan:
            		return this.IdLoaiquannhan.CompareTo(rhs.IdLoaiquannhan);
            		
            		                 
            	
            	
            	case QuannhanColumn.Trangthai:
            		return this.Trangthai.CompareTo(rhs.Trangthai);
            		
            		                 
            	
            	
            	case QuannhanColumn.Ghichu:
            		return this.Ghichu.CompareTo(rhs.Ghichu);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<QuannhanKey> Members
		
		// member variable for the EntityId property
		private QuannhanKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual QuannhanKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new QuannhanKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("Quannhan")
					.Append("|").Append( this.IdQuannhan.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{45}{44}- IdQuannhan: {0}{44}- MaQuannhan: {1}{44}- HotenKhaisinh: {2}{44}- HotenThuongdung: {3}{44}- SotheQuannhan: {4}{44}- CmtQuannhan: {5}{44}- AnhQuannhan: {6}{44}- Ngaysinh: {7}{44}- Nguyenquan: {8}{44}- Sinhquan: {9}{44}- Truquan: {10}{44}- DcBaotin: {11}{44}- HotenCha: {12}{44}- HotenMe: {13}{44}- SafeNameHotenVoChong: {14}{44}- SoAnhchiem: {15}{44}- Socon: {16}{44}- IdCapbac: {17}{44}- IdChucvu: {18}{44}- Cnqs: {19}{44}- Backythuat: {20}{44}- TrinhdoVanhoa: {21}{44}- Suckhoe: {22}{44}- Ngoaingu: {23}{44}- HangThuongtat: {24}{44}- TpGiadinh: {25}{44}- TpBanthan: {26}{44}- IdDantoc: {27}{44}- IdTongiao: {28}{44}- IdGioitinh: {29}{44}- NgayNhapngu: {30}{44}- NgayXuatngu: {31}{44}- NgayTaingu: {32}{44}- NgayVaodoan: {33}{44}- NgayVaodang: {34}{44}- NgayvaodangChinhthuc: {35}{44}- NgaycaptheQn: {36}{44}- NgaychuyenQncn: {37}{44}- NgaychuyenCnv: {38}{44}- IdDonvi: {39}{44}- IdLop: {40}{44}- IdLoaiquannhan: {41}{44}- Trangthai: {42}{44}- Ghichu: {43}{44}", 
				this.IdQuannhan,
				this.MaQuannhan,
				this.HotenKhaisinh,
				this.HotenThuongdung,
				this.SotheQuannhan,
				this.CmtQuannhan,
				(this.AnhQuannhan == null) ? string.Empty : this.AnhQuannhan.ToString(),
				this.Ngaysinh,
				this.Nguyenquan,
				this.Sinhquan,
				(this.Truquan == null) ? string.Empty : this.Truquan.ToString(),
				(this.DcBaotin == null) ? string.Empty : this.DcBaotin.ToString(),
				(this.HotenCha == null) ? string.Empty : this.HotenCha.ToString(),
				(this.HotenMe == null) ? string.Empty : this.HotenMe.ToString(),
				(this.SafeNameHotenVoChong == null) ? string.Empty : this.SafeNameHotenVoChong.ToString(),
				this.SoAnhchiem,
				this.Socon,
				this.IdCapbac,
				this.IdChucvu,
				(this.Cnqs == null) ? string.Empty : this.Cnqs.ToString(),
				(this.Backythuat == null) ? string.Empty : this.Backythuat.ToString(),
				this.TrinhdoVanhoa,
				(this.Suckhoe == null) ? string.Empty : this.Suckhoe.ToString(),
				(this.Ngoaingu == null) ? string.Empty : this.Ngoaingu.ToString(),
				(this.HangThuongtat == null) ? string.Empty : this.HangThuongtat.ToString(),
				(this.TpGiadinh == null) ? string.Empty : this.TpGiadinh.ToString(),
				(this.TpBanthan == null) ? string.Empty : this.TpBanthan.ToString(),
				this.IdDantoc,
				this.IdTongiao,
				this.IdGioitinh,
				this.NgayNhapngu,
				(this.NgayXuatngu == null) ? string.Empty : this.NgayXuatngu.ToString(),
				(this.NgayTaingu == null) ? string.Empty : this.NgayTaingu.ToString(),
				(this.NgayVaodoan == null) ? string.Empty : this.NgayVaodoan.ToString(),
				(this.NgayVaodang == null) ? string.Empty : this.NgayVaodang.ToString(),
				(this.NgayvaodangChinhthuc == null) ? string.Empty : this.NgayvaodangChinhthuc.ToString(),
				(this.NgaycaptheQn == null) ? string.Empty : this.NgaycaptheQn.ToString(),
				(this.NgaychuyenQncn == null) ? string.Empty : this.NgaychuyenQncn.ToString(),
				(this.NgaychuyenCnv == null) ? string.Empty : this.NgaychuyenCnv.ToString(),
				this.IdDonvi,
				this.IdLop,
				this.IdLoaiquannhan,
				this.Trangthai,
				(this.Ghichu == null) ? string.Empty : this.Ghichu.ToString(),
				System.Environment.NewLine, 
				this.GetType());
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'QUANNHAN' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class QuannhanEntityData : ICloneable
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
			/// <summary>			
			/// ID_QUANNHAN : 
			/// </summary>
			/// <remarks>Member of the primary key of the underlying table "QUANNHAN"</remarks>
			public System.Int32 IdQuannhan;
				
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// MA_QUANNHAN : 
		/// </summary>
		public System.String		  MaQuannhan = string.Empty;
		
		/// <summary>
		/// HOTEN_KHAISINH : 
		/// </summary>
		public System.String		  HotenKhaisinh = string.Empty;
		
		/// <summary>
		/// HOTEN_THUONGDUNG : 
		/// </summary>
		public System.String		  HotenThuongdung = string.Empty;
		
		/// <summary>
		/// SOTHE_QUANNHAN : 
		/// </summary>
		public System.Int32		  SotheQuannhan = (int)0;
		
		/// <summary>
		/// CMT_QUANNHAN : 
		/// </summary>
		public System.Int32		  CmtQuannhan = (int)0;
		
		/// <summary>
		/// ANH_QUANNHAN : 
		/// </summary>
		public System.Byte[]		  AnhQuannhan = null;
		
		/// <summary>
		/// NGAYSINH : 
		/// </summary>
		public System.DateTime		  Ngaysinh = DateTime.MinValue;
		
		/// <summary>
		/// NGUYENQUAN : 
		/// </summary>
		public System.String		  Nguyenquan = string.Empty;
		
		/// <summary>
		/// SINHQUAN : 
		/// </summary>
		public System.String		  Sinhquan = string.Empty;
		
		/// <summary>
		/// TRUQUAN : 
		/// </summary>
		public System.String		  Truquan = null;
		
		/// <summary>
		/// DC_BAOTIN : 
		/// </summary>
		public System.String		  DcBaotin = null;
		
		/// <summary>
		/// HOTEN_CHA : 
		/// </summary>
		public System.String		  HotenCha = null;
		
		/// <summary>
		/// HOTEN_ME : 
		/// </summary>
		public System.String		  HotenMe = null;
		
		/// <summary>
		/// HOTEN_VO(CHONG) : 
		/// </summary>
		public System.String		  SafeNameHotenVoChong = null;
		
		/// <summary>
		/// SO_ANHCHIEM : 
		/// </summary>
		public System.Int32		  SoAnhchiem = (int)0;
		
		/// <summary>
		/// SOCON : 
		/// </summary>
		public System.Int32		  Socon = (int)0;
		
		/// <summary>
		/// ID_CAPBAC : 
		/// </summary>
		public System.Int32		  IdCapbac = (int)0;
		
		/// <summary>
		/// ID_CHUCVU : 
		/// </summary>
		public System.Int32		  IdChucvu = (int)0;
		
		/// <summary>
		/// CNQS : 
		/// </summary>
		public System.String		  Cnqs = null;
		
		/// <summary>
		/// BACKYTHUAT : 
		/// </summary>
		public System.String		  Backythuat = null;
		
		/// <summary>
		/// TRINHDO_VANHOA : 
		/// </summary>
		public System.String		  TrinhdoVanhoa = string.Empty;
		
		/// <summary>
		/// SUCKHOE : 
		/// </summary>
		public System.String		  Suckhoe = null;
		
		/// <summary>
		/// NGOAINGU : 
		/// </summary>
		public System.String		  Ngoaingu = null;
		
		/// <summary>
		/// HANG_THUONGTAT : 
		/// </summary>
		public System.String		  HangThuongtat = null;
		
		/// <summary>
		/// TP_GIADINH : 
		/// </summary>
		public System.String		  TpGiadinh = null;
		
		/// <summary>
		/// TP_BANTHAN : 
		/// </summary>
		public System.String		  TpBanthan = null;
		
		/// <summary>
		/// ID_DANTOC : 
		/// </summary>
		public System.Int32		  IdDantoc = (int)0;
		
		/// <summary>
		/// ID_TONGIAO : 
		/// </summary>
		public System.Int32		  IdTongiao = (int)0;
		
		/// <summary>
		/// ID_GIOITINH : 
		/// </summary>
		public System.Int32		  IdGioitinh = (int)0;
		
		/// <summary>
		/// NGAY_NHAPNGU : 
		/// </summary>
		public System.DateTime		  NgayNhapngu = DateTime.MinValue;
		
		/// <summary>
		/// NGAY_XUATNGU : 
		/// </summary>
		public System.DateTime?		  NgayXuatngu = null;
		
		/// <summary>
		/// NGAY_TAINGU : 
		/// </summary>
		public System.DateTime?		  NgayTaingu = null;
		
		/// <summary>
		/// NGAY_VAODOAN : 
		/// </summary>
		public System.DateTime?		  NgayVaodoan = null;
		
		/// <summary>
		/// NGAY_VAODANG : 
		/// </summary>
		public System.DateTime?		  NgayVaodang = null;
		
		/// <summary>
		/// NGAYVAODANG_CHINHTHUC : 
		/// </summary>
		public System.DateTime?		  NgayvaodangChinhthuc = null;
		
		/// <summary>
		/// NGAYCAPTHE_QN : 
		/// </summary>
		public System.DateTime?		  NgaycaptheQn = null;
		
		/// <summary>
		/// NGAYCHUYEN_QNCN : 
		/// </summary>
		public System.DateTime?		  NgaychuyenQncn = null;
		
		/// <summary>
		/// NGAYCHUYEN_CNV : 
		/// </summary>
		public System.DateTime?		  NgaychuyenCnv = null;
		
		/// <summary>
		/// ID_DONVI : 
		/// </summary>
		public System.Int32		  IdDonvi = (int)0;
		
		/// <summary>
		/// ID_LOP : 
		/// </summary>
		public System.Int32		  IdLop = (int)0;
		
		/// <summary>
		/// ID_LOAIQUANNHAN : 
		/// </summary>
		public System.Int32		  IdLoaiquannhan = (int)0;
		
		/// <summary>
		/// TRANGTHAI : 
		/// </summary>
		public System.String		  Trangthai = string.Empty;
		
		/// <summary>
		/// GHICHU : 
		/// </summary>
		public System.String		  Ghichu = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private Dmgioitinh _idGioitinhSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmgioitinh"/>.
		/// </summary>
		/// <value>The source Dmgioitinh for IdGioitinh.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmgioitinh IdGioitinhSource
      	{
            get { return this._idGioitinhSource; }
            set { this._idGioitinhSource = value; }
      	}
		private Dmloaiquannhan _idLoaiquannhanSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmloaiquannhan"/>.
		/// </summary>
		/// <value>The source Dmloaiquannhan for IdLoaiquannhan.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmloaiquannhan IdLoaiquannhanSource
      	{
            get { return this._idLoaiquannhanSource; }
            set { this._idLoaiquannhanSource = value; }
      	}
		private Dmdantoc _idDantocSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmdantoc"/>.
		/// </summary>
		/// <value>The source Dmdantoc for IdDantoc.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmdantoc IdDantocSource
      	{
            get { return this._idDantocSource; }
            set { this._idDantocSource = value; }
      	}
		private Dmtongiao _idTongiaoSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmtongiao"/>.
		/// </summary>
		/// <value>The source Dmtongiao for IdTongiao.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmtongiao IdTongiaoSource
      	{
            get { return this._idTongiaoSource; }
            set { this._idTongiaoSource = value; }
      	}
		private Dmdonvi _idDonviSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmdonvi"/>.
		/// </summary>
		/// <value>The source Dmdonvi for IdDonvi.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmdonvi IdDonviSource
      	{
            get { return this._idDonviSource; }
            set { this._idDonviSource = value; }
      	}
		private Dmcapbac _idCapbacSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmcapbac"/>.
		/// </summary>
		/// <value>The source Dmcapbac for IdCapbac.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmcapbac IdCapbacSource
      	{
            get { return this._idCapbacSource; }
            set { this._idCapbacSource = value; }
      	}
		private Dmchucvu _idChucvuSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmchucvu"/>.
		/// </summary>
		/// <value>The source Dmchucvu for IdChucvu.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmchucvu IdChucvuSource
      	{
            get { return this._idChucvuSource; }
            set { this._idChucvuSource = value; }
      	}
		private Dmlop _idLopSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="Dmlop"/>.
		/// </summary>
		/// <value>The source Dmlop for IdLop.</value>
        [XmlIgnore()]
		[Browsable(false)]
		public virtual Dmlop IdLopSource
      	{
            get { return this._idLopSource; }
            set { this._idLopSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region LschucvuCollection
		
		private TList<Lschucvu> lschucvuIdQuannhan;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation lschucvuIdQuannhan
		/// </summary>	
		public TList<Lschucvu> LschucvuCollection
		{
			get
			{
				if (lschucvuIdQuannhan == null)
				{
				lschucvuIdQuannhan = new TList<Lschucvu>();
				}
	
				return lschucvuIdQuannhan;
			}
			set { lschucvuIdQuannhan = value; }
		}
		
		#endregion

		#region LscapbacCollection
		
		private TList<Lscapbac> lscapbacIdQuannhan;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation lscapbacIdQuannhan
		/// </summary>	
		public TList<Lscapbac> LscapbacCollection
		{
			get
			{
				if (lscapbacIdQuannhan == null)
				{
				lscapbacIdQuannhan = new TList<Lscapbac>();
				}
	
				return lscapbacIdQuannhan;
			}
			set { lscapbacIdQuannhan = value; }
		}
		
		#endregion

		#region LskyluatCollection
		
		private TList<Lskyluat> lskyluatIdQuannhan;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation lskyluatIdQuannhan
		/// </summary>	
		public TList<Lskyluat> LskyluatCollection
		{
			get
			{
				if (lskyluatIdQuannhan == null)
				{
				lskyluatIdQuannhan = new TList<Lskyluat>();
				}
	
				return lskyluatIdQuannhan;
			}
			set { lskyluatIdQuannhan = value; }
		}
		
		#endregion

		#region LskhenthuongCollection
		
		private TList<Lskhenthuong> lskhenthuongIdQuannhan;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation lskhenthuongIdQuannhan
		/// </summary>	
		public TList<Lskhenthuong> LskhenthuongCollection
		{
			get
			{
				if (lskhenthuongIdQuannhan == null)
				{
				lskhenthuongIdQuannhan = new TList<Lskhenthuong>();
				}
	
				return lskhenthuongIdQuannhan;
			}
			set { lskhenthuongIdQuannhan = value; }
		}
		
		#endregion

		#region LstruonglopCollection
		
		private TList<Lstruonglop> lstruonglopIdQuannhan;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation lstruonglopIdQuannhan
		/// </summary>	
		public TList<Lstruonglop> LstruonglopCollection
		{
			get
			{
				if (lstruonglopIdQuannhan == null)
				{
				lstruonglopIdQuannhan = new TList<Lstruonglop>();
				}
	
				return lstruonglopIdQuannhan;
			}
			set { lstruonglopIdQuannhan = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			QuannhanEntityData _tmp = new QuannhanEntityData();
						
			_tmp.IdQuannhan = this.IdQuannhan;
			
			_tmp.MaQuannhan = this.MaQuannhan;
			_tmp.HotenKhaisinh = this.HotenKhaisinh;
			_tmp.HotenThuongdung = this.HotenThuongdung;
			_tmp.SotheQuannhan = this.SotheQuannhan;
			_tmp.CmtQuannhan = this.CmtQuannhan;
			_tmp.AnhQuannhan = this.AnhQuannhan;
			_tmp.Ngaysinh = this.Ngaysinh;
			_tmp.Nguyenquan = this.Nguyenquan;
			_tmp.Sinhquan = this.Sinhquan;
			_tmp.Truquan = this.Truquan;
			_tmp.DcBaotin = this.DcBaotin;
			_tmp.HotenCha = this.HotenCha;
			_tmp.HotenMe = this.HotenMe;
			_tmp.SafeNameHotenVoChong = this.SafeNameHotenVoChong;
			_tmp.SoAnhchiem = this.SoAnhchiem;
			_tmp.Socon = this.Socon;
			_tmp.IdCapbac = this.IdCapbac;
			_tmp.IdChucvu = this.IdChucvu;
			_tmp.Cnqs = this.Cnqs;
			_tmp.Backythuat = this.Backythuat;
			_tmp.TrinhdoVanhoa = this.TrinhdoVanhoa;
			_tmp.Suckhoe = this.Suckhoe;
			_tmp.Ngoaingu = this.Ngoaingu;
			_tmp.HangThuongtat = this.HangThuongtat;
			_tmp.TpGiadinh = this.TpGiadinh;
			_tmp.TpBanthan = this.TpBanthan;
			_tmp.IdDantoc = this.IdDantoc;
			_tmp.IdTongiao = this.IdTongiao;
			_tmp.IdGioitinh = this.IdGioitinh;
			_tmp.NgayNhapngu = this.NgayNhapngu;
			_tmp.NgayXuatngu = this.NgayXuatngu;
			_tmp.NgayTaingu = this.NgayTaingu;
			_tmp.NgayVaodoan = this.NgayVaodoan;
			_tmp.NgayVaodang = this.NgayVaodang;
			_tmp.NgayvaodangChinhthuc = this.NgayvaodangChinhthuc;
			_tmp.NgaycaptheQn = this.NgaycaptheQn;
			_tmp.NgaychuyenQncn = this.NgaychuyenQncn;
			_tmp.NgaychuyenCnv = this.NgaychuyenCnv;
			_tmp.IdDonvi = this.IdDonvi;
			_tmp.IdLop = this.IdLop;
			_tmp.IdLoaiquannhan = this.IdLoaiquannhan;
			_tmp.Trangthai = this.Trangthai;
			_tmp.Ghichu = this.Ghichu;
			
			#region Source Parent Composite Entities
			if (this.IdGioitinhSource != null)
				_tmp.IdGioitinhSource = MakeCopyOf(this.IdGioitinhSource) as Dmgioitinh;
			if (this.IdLoaiquannhanSource != null)
				_tmp.IdLoaiquannhanSource = MakeCopyOf(this.IdLoaiquannhanSource) as Dmloaiquannhan;
			if (this.IdDantocSource != null)
				_tmp.IdDantocSource = MakeCopyOf(this.IdDantocSource) as Dmdantoc;
			if (this.IdTongiaoSource != null)
				_tmp.IdTongiaoSource = MakeCopyOf(this.IdTongiaoSource) as Dmtongiao;
			if (this.IdDonviSource != null)
				_tmp.IdDonviSource = MakeCopyOf(this.IdDonviSource) as Dmdonvi;
			if (this.IdCapbacSource != null)
				_tmp.IdCapbacSource = MakeCopyOf(this.IdCapbacSource) as Dmcapbac;
			if (this.IdChucvuSource != null)
				_tmp.IdChucvuSource = MakeCopyOf(this.IdChucvuSource) as Dmchucvu;
			if (this.IdLopSource != null)
				_tmp.IdLopSource = MakeCopyOf(this.IdLopSource) as Dmlop;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this.lschucvuIdQuannhan != null)
				_tmp.LschucvuCollection = (TList<Lschucvu>) MakeCopyOf(this.LschucvuCollection); 
			if (this.lscapbacIdQuannhan != null)
				_tmp.LscapbacCollection = (TList<Lscapbac>) MakeCopyOf(this.LscapbacCollection); 
			if (this.lskyluatIdQuannhan != null)
				_tmp.LskyluatCollection = (TList<Lskyluat>) MakeCopyOf(this.LskyluatCollection); 
			if (this.lskhenthuongIdQuannhan != null)
				_tmp.LskhenthuongCollection = (TList<Lskhenthuong>) MakeCopyOf(this.LskhenthuongCollection); 
			if (this.lstruonglopIdQuannhan != null)
				_tmp.LstruonglopCollection = (TList<Lstruonglop>) MakeCopyOf(this.LstruonglopCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct



		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuannhanColumn"/> which has raised the event.</param>
		public void OnColumnChanging(QuannhanColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuannhanColumn"/> which has raised the event.</param>
		public void OnColumnChanged(QuannhanColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuannhanColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public void OnColumnChanging(QuannhanColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				QuannhanEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new QuannhanEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="QuannhanColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public void OnColumnChanged(QuannhanColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				QuannhanEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new QuannhanEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region QuannhanEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="Quannhan"/> object.
	/// </remarks>
	public class QuannhanEventArgs : System.EventArgs
	{
		private QuannhanColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the QuannhanEventArgs class.
		///</summary>
		public QuannhanEventArgs(QuannhanColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the QuannhanEventArgs class.
		///</summary>
		public QuannhanEventArgs(QuannhanColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The QuannhanColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="QuannhanColumn" />
		public QuannhanColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all Quannhan related events.
	///</summary>
	public delegate void QuannhanEventHandler(object sender, QuannhanEventArgs e);
	
	#region QuannhanComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class QuannhanComparer : System.Collections.Generic.IComparer<Quannhan>
	{
		QuannhanColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:QuannhanComparer"/> class.
        /// </summary>
		public QuannhanComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:QuannhanComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public QuannhanComparer(QuannhanColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="Quannhan"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="Quannhan"/> to compare.</param>
        /// <param name="b">The second <c>Quannhan</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(Quannhan a, Quannhan b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(Quannhan entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(Quannhan a, Quannhan b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public QuannhanColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region QuannhanKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="Quannhan"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class QuannhanKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the QuannhanKey class.
		/// </summary>
		public QuannhanKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the QuannhanKey class.
		/// </summary>
		public QuannhanKey(QuannhanBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.IdQuannhan = entity.IdQuannhan;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the QuannhanKey class.
		/// </summary>
		public QuannhanKey(System.Int32 idQuannhan)
		{
			#region Init Properties

			this.IdQuannhan = idQuannhan;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private QuannhanBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public QuannhanBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the IdQuannhan property
		private System.Int32 _idQuannhan;
		
		/// <summary>
		/// Gets or sets the IdQuannhan property.
		/// </summary>
		public System.Int32 IdQuannhan
		{
			get { return _idQuannhan; }
			set
			{
				if ( this.Entity != null )
					this.Entity.IdQuannhan = value;
				
				_idQuannhan = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				IdQuannhan = ( values["IdQuannhan"] != null ) ? (System.Int32) EntityUtil.ChangeType(values["IdQuannhan"], typeof(System.Int32)) : (int)0;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("IdQuannhan", IdQuannhan);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("IdQuannhan: {0}{1}",
								IdQuannhan,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region QuannhanColumn Enum
	
	/// <summary>
	/// Enumerate the Quannhan columns.
	/// </summary>
	[Serializable]
	public enum QuannhanColumn : int
	{
		/// <summary>
		/// IdQuannhan : 
		/// </summary>
		[EnumTextValue("ID_QUANNHAN")]
		[ColumnEnum("ID_QUANNHAN", typeof(System.Int32), System.Data.DbType.Int32, true, true, false)]
		IdQuannhan = 1,
		/// <summary>
		/// MaQuannhan : 
		/// </summary>
		[EnumTextValue("MA_QUANNHAN")]
		[ColumnEnum("MA_QUANNHAN", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		MaQuannhan = 2,
		/// <summary>
		/// HotenKhaisinh : 
		/// </summary>
		[EnumTextValue("HOTEN_KHAISINH")]
		[ColumnEnum("HOTEN_KHAISINH", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		HotenKhaisinh = 3,
		/// <summary>
		/// HotenThuongdung : 
		/// </summary>
		[EnumTextValue("HOTEN_THUONGDUNG")]
		[ColumnEnum("HOTEN_THUONGDUNG", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		HotenThuongdung = 4,
		/// <summary>
		/// SotheQuannhan : 
		/// </summary>
		[EnumTextValue("SOTHE_QUANNHAN")]
		[ColumnEnum("SOTHE_QUANNHAN", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SotheQuannhan = 5,
		/// <summary>
		/// CmtQuannhan : 
		/// </summary>
		[EnumTextValue("CMT_QUANNHAN")]
		[ColumnEnum("CMT_QUANNHAN", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		CmtQuannhan = 6,
		/// <summary>
		/// AnhQuannhan : 
		/// </summary>
		[EnumTextValue("ANH_QUANNHAN")]
		[ColumnEnum("ANH_QUANNHAN", typeof(System.Byte[]), System.Data.DbType.Binary, false, false, true)]
		AnhQuannhan = 7,
		/// <summary>
		/// Ngaysinh : 
		/// </summary>
		[EnumTextValue("NGAYSINH")]
		[ColumnEnum("NGAYSINH", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		Ngaysinh = 8,
		/// <summary>
		/// Nguyenquan : 
		/// </summary>
		[EnumTextValue("NGUYENQUAN")]
		[ColumnEnum("NGUYENQUAN", typeof(System.String), System.Data.DbType.String, false, false, false)]
		Nguyenquan = 9,
		/// <summary>
		/// Sinhquan : 
		/// </summary>
		[EnumTextValue("SINHQUAN")]
		[ColumnEnum("SINHQUAN", typeof(System.String), System.Data.DbType.String, false, false, false)]
		Sinhquan = 10,
		/// <summary>
		/// Truquan : 
		/// </summary>
		[EnumTextValue("TRUQUAN")]
		[ColumnEnum("TRUQUAN", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Truquan = 11,
		/// <summary>
		/// DcBaotin : 
		/// </summary>
		[EnumTextValue("DC_BAOTIN")]
		[ColumnEnum("DC_BAOTIN", typeof(System.String), System.Data.DbType.String, false, false, true)]
		DcBaotin = 12,
		/// <summary>
		/// HotenCha : 
		/// </summary>
		[EnumTextValue("HOTEN_CHA")]
		[ColumnEnum("HOTEN_CHA", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		HotenCha = 13,
		/// <summary>
		/// HotenMe : 
		/// </summary>
		[EnumTextValue("HOTEN_ME")]
		[ColumnEnum("HOTEN_ME", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		HotenMe = 14,
		/// <summary>
		/// SafeNameHotenVoChong : 
		/// </summary>
		[EnumTextValue("HOTEN_VO(CHONG)")]
		[ColumnEnum("HOTEN_VO(CHONG)", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		SafeNameHotenVoChong = 15,
		/// <summary>
		/// SoAnhchiem : 
		/// </summary>
		[EnumTextValue("SO_ANHCHIEM")]
		[ColumnEnum("SO_ANHCHIEM", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		SoAnhchiem = 16,
		/// <summary>
		/// Socon : 
		/// </summary>
		[EnumTextValue("SOCON")]
		[ColumnEnum("SOCON", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		Socon = 17,
		/// <summary>
		/// IdCapbac : 
		/// </summary>
		[EnumTextValue("ID_CAPBAC")]
		[ColumnEnum("ID_CAPBAC", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdCapbac = 18,
		/// <summary>
		/// IdChucvu : 
		/// </summary>
		[EnumTextValue("ID_CHUCVU")]
		[ColumnEnum("ID_CHUCVU", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdChucvu = 19,
		/// <summary>
		/// Cnqs : 
		/// </summary>
		[EnumTextValue("CNQS")]
		[ColumnEnum("CNQS", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Cnqs = 20,
		/// <summary>
		/// Backythuat : 
		/// </summary>
		[EnumTextValue("BACKYTHUAT")]
		[ColumnEnum("BACKYTHUAT", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Backythuat = 21,
		/// <summary>
		/// TrinhdoVanhoa : 
		/// </summary>
		[EnumTextValue("TRINHDO_VANHOA")]
		[ColumnEnum("TRINHDO_VANHOA", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		TrinhdoVanhoa = 22,
		/// <summary>
		/// Suckhoe : 
		/// </summary>
		[EnumTextValue("SUCKHOE")]
		[ColumnEnum("SUCKHOE", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Suckhoe = 23,
		/// <summary>
		/// Ngoaingu : 
		/// </summary>
		[EnumTextValue("NGOAINGU")]
		[ColumnEnum("NGOAINGU", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Ngoaingu = 24,
		/// <summary>
		/// HangThuongtat : 
		/// </summary>
		[EnumTextValue("HANG_THUONGTAT")]
		[ColumnEnum("HANG_THUONGTAT", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		HangThuongtat = 25,
		/// <summary>
		/// TpGiadinh : 
		/// </summary>
		[EnumTextValue("TP_GIADINH")]
		[ColumnEnum("TP_GIADINH", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TpGiadinh = 26,
		/// <summary>
		/// TpBanthan : 
		/// </summary>
		[EnumTextValue("TP_BANTHAN")]
		[ColumnEnum("TP_BANTHAN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		TpBanthan = 27,
		/// <summary>
		/// IdDantoc : 
		/// </summary>
		[EnumTextValue("ID_DANTOC")]
		[ColumnEnum("ID_DANTOC", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdDantoc = 28,
		/// <summary>
		/// IdTongiao : 
		/// </summary>
		[EnumTextValue("ID_TONGIAO")]
		[ColumnEnum("ID_TONGIAO", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdTongiao = 29,
		/// <summary>
		/// IdGioitinh : 
		/// </summary>
		[EnumTextValue("ID_GIOITINH")]
		[ColumnEnum("ID_GIOITINH", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdGioitinh = 30,
		/// <summary>
		/// NgayNhapngu : 
		/// </summary>
		[EnumTextValue("NGAY_NHAPNGU")]
		[ColumnEnum("NGAY_NHAPNGU", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		NgayNhapngu = 31,
		/// <summary>
		/// NgayXuatngu : 
		/// </summary>
		[EnumTextValue("NGAY_XUATNGU")]
		[ColumnEnum("NGAY_XUATNGU", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayXuatngu = 32,
		/// <summary>
		/// NgayTaingu : 
		/// </summary>
		[EnumTextValue("NGAY_TAINGU")]
		[ColumnEnum("NGAY_TAINGU", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayTaingu = 33,
		/// <summary>
		/// NgayVaodoan : 
		/// </summary>
		[EnumTextValue("NGAY_VAODOAN")]
		[ColumnEnum("NGAY_VAODOAN", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayVaodoan = 34,
		/// <summary>
		/// NgayVaodang : 
		/// </summary>
		[EnumTextValue("NGAY_VAODANG")]
		[ColumnEnum("NGAY_VAODANG", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayVaodang = 35,
		/// <summary>
		/// NgayvaodangChinhthuc : 
		/// </summary>
		[EnumTextValue("NGAYVAODANG_CHINHTHUC")]
		[ColumnEnum("NGAYVAODANG_CHINHTHUC", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgayvaodangChinhthuc = 36,
		/// <summary>
		/// NgaycaptheQn : 
		/// </summary>
		[EnumTextValue("NGAYCAPTHE_QN")]
		[ColumnEnum("NGAYCAPTHE_QN", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgaycaptheQn = 37,
		/// <summary>
		/// NgaychuyenQncn : 
		/// </summary>
		[EnumTextValue("NGAYCHUYEN_QNCN")]
		[ColumnEnum("NGAYCHUYEN_QNCN", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgaychuyenQncn = 38,
		/// <summary>
		/// NgaychuyenCnv : 
		/// </summary>
		[EnumTextValue("NGAYCHUYEN_CNV")]
		[ColumnEnum("NGAYCHUYEN_CNV", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		NgaychuyenCnv = 39,
		/// <summary>
		/// IdDonvi : 
		/// </summary>
		[EnumTextValue("ID_DONVI")]
		[ColumnEnum("ID_DONVI", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdDonvi = 40,
		/// <summary>
		/// IdLop : 
		/// </summary>
		[EnumTextValue("ID_LOP")]
		[ColumnEnum("ID_LOP", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdLop = 41,
		/// <summary>
		/// IdLoaiquannhan : 
		/// </summary>
		[EnumTextValue("ID_LOAIQUANNHAN")]
		[ColumnEnum("ID_LOAIQUANNHAN", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		IdLoaiquannhan = 42,
		/// <summary>
		/// Trangthai : 
		/// </summary>
		[EnumTextValue("TRANGTHAI")]
		[ColumnEnum("TRANGTHAI", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		Trangthai = 43,
		/// <summary>
		/// Ghichu : 
		/// </summary>
		[EnumTextValue("GHICHU")]
		[ColumnEnum("GHICHU", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Ghichu = 44
	}//End enum

	#endregion QuannhanColumn Enum

} // end namespace
